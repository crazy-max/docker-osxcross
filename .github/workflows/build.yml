name: build

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

on:
  schedule:
    - cron: '0 8 */6 * *' # every 6 days to keep cache
  push:
    branches:
      - 'main'
    tags:
      - '*'
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

env:
  DOCKERHUB_SLUG: crazymax/osxcross
  GHCR_SLUG: ghcr.io/crazy-max/osxcross

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        variant:
          - ubuntu
          - alpine
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
            ${{ env.GHCR_SLUG }}
          tags: |
            type=match,pattern=(.*)-r,group=1,enable=${{ matrix.variant == 'ubuntu' }}
            type=match,pattern=(.*)-r,group=1,suffix=-${{ matrix.variant }}
            type=edge,enable=${{ matrix.variant == 'ubuntu' }}
            type=edge,suffix=-${{ matrix.variant }}
            type=ref,event=tag,enable=${{ matrix.variant == 'ubuntu' }}
            type=ref,event=tag,suffix=-${{ matrix.variant }}
            type=ref,event=pr
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') && matrix.variant == 'ubuntu' }}
            type=raw,value=latest,suffix=-${{ matrix.variant }},enable=${{ startsWith(github.ref, 'refs/tags/') }}
          flavor: |
            latest=false
          labels: |
            org.opencontainers.image.title=MacOSX cross toolchain (${{ matrix.variant }})
            org.opencontainers.image.vendor=CrazyMax
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build ${{ matrix.variant }}
        uses: docker/bake-action@v2
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: image-all
          set: |
            *.cache-from=type=gha,scope=${{ matrix.variant }}
            *.cache-to=type=gha,scope=${{ matrix.variant }},mode=max
          push: ${{ github.event_name != 'pull_request' }}
        env:
          BASE_VARIANT: ${{ matrix.variant }}
